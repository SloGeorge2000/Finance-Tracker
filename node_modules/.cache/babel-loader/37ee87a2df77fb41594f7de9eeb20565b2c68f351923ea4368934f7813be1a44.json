{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jurev\\\\Desktop\\\\SAVINGS 2025\\\\finance-tracker\\\\src\\\\components\\\\PredictionChart.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction monthsBetween(start, end) {\n  return (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth());\n}\nfunction findIndexForDate(labels, targetDate) {\n  const targetStr = targetDate.toLocaleDateString('en-GB', {\n    year: 'numeric',\n    month: 'short'\n  });\n  return labels.findIndex(label => label === targetStr);\n}\nconst PredictionChart = ({\n  input\n}) => {\n  const now = new Date();\n  const target = new Date(input.targetDate);\n  const fiveYears = new Date(now.getFullYear() + 5, now.getMonth(), 1);\n\n  // Calculate up to the later of target date or 5 years from now\n  const endDate = target > fiveYears ? target : fiveYears;\n  const months = monthsBetween(now, endDate);\n  let etoro = input.currentSavingsEtoro || 0;\n  let bank = input.currentSavingsBank || 0;\n  const monthlyEtoroInterest = (input.etoroInterest || 0) / 100 / 12;\n  const monthlySpending = input.spending.food + input.spending.drinks + input.spending.misc + input.spending.social + input.spending.apartment;\n  const labels = [];\n  const data = [];\n  for (let i = 0; i <= months; i++) {\n    const date = new Date(now.getFullYear(), now.getMonth() + i, 1);\n    labels.push(date.toLocaleDateString('en-GB', {\n      year: 'numeric',\n      month: 'short'\n    }));\n    data.push(Number((bank + etoro).toFixed(2)));\n    // Apply salary and spending\n    bank = bank + (input.monthlySalary || 0) - monthlySpending;\n    // Apply E-toro interest\n    etoro = etoro * (1 + monthlyEtoroInterest);\n  }\n\n  // Find savings for Jan 1st next year and in 5 years\n  const jan1 = new Date(now.getFullYear() + 1, 0, 1);\n  const jan1Idx = findIndexForDate(labels, jan1);\n  const fiveYearsIdx = findIndexForDate(labels, fiveYears);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"predicted-net-valuation\",\n      children: \"Predicted Net Valuation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predicted-net-valuation\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Predicted Savings on Target Date: \", data[monthsBetween(now, target)].toFixed(2), \" EUR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predicted-net-valuation\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Predicted Savings on Jan 1st next year: \", jan1Idx !== -1 ? data[jan1Idx].toFixed(2) : 'N/A', \" EUR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predicted-net-valuation\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Predicted Savings in 5 years: \", fiveYearsIdx !== -1 ? data[fiveYearsIdx].toFixed(2) : 'N/A', \" EUR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels,\n        datasets: [{\n          label: 'Predicted Savings',\n          data,\n          borderColor: '#FFB6C1',\n          backgroundColor: 'rgba(255,182,193,0.2)',\n          fill: true,\n          pointBackgroundColor: '#FFB6C1',\n          pointBorderColor: '#FFB6C1'\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n            labels: {\n              font: {\n                family: 'Roboto'\n              }\n            }\n          },\n          title: {\n            display: true,\n            text: 'Predicted Net Valuation Over Time',\n            font: {\n              size: 18,\n              family: 'Roboto'\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Date',\n              font: {\n                family: 'Roboto'\n              }\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Savings (EUR)',\n              font: {\n                family: 'Roboto'\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = PredictionChart;\nexport default PredictionChart;\nvar _c;\n$RefreshReg$(_c, \"PredictionChart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","monthsBetween","start","end","getFullYear","getMonth","findIndexForDate","labels","targetDate","targetStr","toLocaleDateString","year","month","findIndex","label","PredictionChart","input","now","Date","target","fiveYears","endDate","months","etoro","currentSavingsEtoro","bank","currentSavingsBank","monthlyEtoroInterest","etoroInterest","monthlySpending","spending","food","drinks","misc","social","apartment","data","i","date","push","Number","toFixed","monthlySalary","jan1","jan1Idx","fiveYearsIdx","children","className","fileName","_jsxFileName","lineNumber","columnNumber","datasets","borderColor","backgroundColor","fill","pointBackgroundColor","pointBorderColor","options","responsive","plugins","legend","display","font","family","title","text","size","scales","x","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/jurev/Desktop/SAVINGS 2025/finance-tracker/src/components/PredictionChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { PredictionInput } from './PredictionForm';\r\n\r\nfunction monthsBetween(start: Date, end: Date) {\r\n  return (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth());\r\n}\r\n\r\nfunction findIndexForDate(labels: string[], targetDate: Date) {\r\n  const targetStr = targetDate.toLocaleDateString('en-GB', { year: 'numeric', month: 'short' });\r\n  return labels.findIndex(label => label === targetStr);\r\n}\r\n\r\nconst PredictionChart: React.FC<{ input: PredictionInput }> = ({ input }) => {\r\n  const now = new Date();\r\n  const target = new Date(input.targetDate);\r\n  const fiveYears = new Date(now.getFullYear() + 5, now.getMonth(), 1);\r\n\r\n  // Calculate up to the later of target date or 5 years from now\r\n  const endDate = target > fiveYears ? target : fiveYears;\r\n  const months = monthsBetween(now, endDate);\r\n\r\n  let etoro = input.currentSavingsEtoro || 0;\r\n  let bank = input.currentSavingsBank || 0;\r\n  const monthlyEtoroInterest = (input.etoroInterest || 0) / 100 / 12;\r\n  const monthlySpending =\r\n    input.spending.food +\r\n    input.spending.drinks +\r\n    input.spending.misc +\r\n    input.spending.social +\r\n    input.spending.apartment;\r\n\r\n  const labels: string[] = [];\r\n  const data: number[] = [];\r\n\r\n  for (let i = 0; i <= months; i++) {\r\n    const date = new Date(now.getFullYear(), now.getMonth() + i, 1);\r\n    labels.push(date.toLocaleDateString('en-GB', { year: 'numeric', month: 'short' }));\r\n    data.push(Number((bank + etoro).toFixed(2)));\r\n    // Apply salary and spending\r\n    bank = bank + (input.monthlySalary || 0) - monthlySpending;\r\n    // Apply E-toro interest\r\n    etoro = (etoro) * (1 + monthlyEtoroInterest);\r\n  }\r\n\r\n  // Find savings for Jan 1st next year and in 5 years\r\n  const jan1 = new Date(now.getFullYear() + 1, 0, 1);\r\n  const jan1Idx = findIndexForDate(labels, jan1);\r\n  const fiveYearsIdx = findIndexForDate(labels, fiveYears);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"predicted-net-valuation\">Predicted Net Valuation</h2>\r\n      <div className=\"predicted-net-valuation\">\r\n        <strong>Predicted Savings on Target Date: {data[monthsBetween(now, target)].toFixed(2)} EUR</strong>\r\n      </div>\r\n      <div className=\"predicted-net-valuation\">\r\n        <strong>\r\n          Predicted Savings on Jan 1st next year: {jan1Idx !== -1 ? data[jan1Idx].toFixed(2) : 'N/A'} EUR\r\n        </strong>\r\n      </div>\r\n      <div className=\"predicted-net-valuation\">\r\n        <strong>\r\n          Predicted Savings in 5 years: {fiveYearsIdx !== -1 ? data[fiveYearsIdx].toFixed(2) : 'N/A'} EUR\r\n        </strong>\r\n      </div>\r\n      <Line\r\n        data={{\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: 'Predicted Savings',\r\n              data,\r\n              borderColor: '#FFB6C1',\r\n              backgroundColor: 'rgba(255,182,193,0.2)',\r\n              fill: true,\r\n              pointBackgroundColor: '#FFB6C1',\r\n              pointBorderColor: '#FFB6C1',\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          responsive: true,\r\n          plugins: {\r\n            legend: { display: true, labels: { font: { family: 'Roboto' } } },\r\n            title: {\r\n              display: true,\r\n              text: 'Predicted Net Valuation Over Time',\r\n              font: { size: 18, family: 'Roboto' },\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              title: { display: true, text: 'Date', font: { family: 'Roboto' } },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n              title: { display: true, text: 'Savings (EUR)', font: { family: 'Roboto' } },\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}