{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jurev\\\\Desktop\\\\SAVINGS 2025\\\\finance-tracker\\\\src\\\\components\\\\PredictionChart.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction monthsBetween(start, end) {\n  return (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth());\n}\nconst PredictionChart = ({\n  input\n}) => {\n  const now = new Date();\n  const target = new Date(input.targetDate);\n  const months = monthsBetween(now, target);\n  let savings = input.currentSavings;\n  const monthlyInterest = input.interestRate / 100 / 12;\n  const monthlySpending = input.spending.food + input.spending.drinks + input.spending.misc + input.spending.social + input.spending.apartment;\n  const labels = [];\n  const data = [];\n  for (let i = 0; i <= months; i++) {\n    const date = new Date(now.getFullYear(), now.getMonth() + i, 1);\n    labels.push(date.toLocaleDateString('en-GB', {\n      year: 'numeric',\n      month: 'short'\n    }));\n    data.push(Number(savings.toFixed(2)));\n    savings = (savings + input.monthlySalary - monthlySpending) * (1 + monthlyInterest);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Predicted Net Valuation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels,\n        datasets: [{\n          label: 'Predicted Savings',\n          data,\n          borderColor: '#36a2eb',\n          backgroundColor: 'rgba(54,162,235,0.2)',\n          fill: true\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = PredictionChart;\nexport default PredictionChart;\nvar _c;\n$RefreshReg$(_c, \"PredictionChart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","monthsBetween","start","end","getFullYear","getMonth","PredictionChart","input","now","Date","target","targetDate","months","savings","currentSavings","monthlyInterest","interestRate","monthlySpending","spending","food","drinks","misc","social","apartment","labels","data","i","date","push","toLocaleDateString","year","month","Number","toFixed","monthlySalary","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","label","borderColor","backgroundColor","fill","options","responsive","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/jurev/Desktop/SAVINGS 2025/finance-tracker/src/components/PredictionChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { PredictionInput } from './PredictionForm';\r\n\r\nfunction monthsBetween(start: Date, end: Date) {\r\n  return (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth());\r\n}\r\n\r\nconst PredictionChart: React.FC<{ input: PredictionInput }> = ({ input }) => {\r\n  const now = new Date();\r\n  const target = new Date(input.targetDate);\r\n  const months = monthsBetween(now, target);\r\n\r\n  let savings = input.currentSavings;\r\n  const monthlyInterest = input.interestRate / 100 / 12;\r\n  const monthlySpending =\r\n    input.spending.food +\r\n    input.spending.drinks +\r\n    input.spending.misc +\r\n    input.spending.social +\r\n    input.spending.apartment;\r\n\r\n  const labels: string[] = [];\r\n  const data: number[] = [];\r\n\r\n  for (let i = 0; i <= months; i++) {\r\n    const date = new Date(now.getFullYear(), now.getMonth() + i, 1);\r\n    labels.push(date.toLocaleDateString('en-GB', { year: 'numeric', month: 'short' }));\r\n    data.push(Number(savings.toFixed(2)));\r\n    savings = (savings + input.monthlySalary - monthlySpending) * (1 + monthlyInterest);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Predicted Net Valuation</h2>\r\n      <Line\r\n        data={{\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: 'Predicted Savings',\r\n              data,\r\n              borderColor: '#36a2eb',\r\n              backgroundColor: 'rgba(54,162,235,0.2)',\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          responsive: true,\r\n          scales: {\r\n            y: { beginAtZero: true },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,SAASC,aAAaA,CAACC,KAAW,EAAEC,GAAS,EAAE;EAC7C,OAAO,CAACA,GAAG,CAACC,WAAW,CAAC,CAAC,GAAGF,KAAK,CAACE,WAAW,CAAC,CAAC,IAAI,EAAE,IAAID,GAAG,CAACE,QAAQ,CAAC,CAAC,GAAGH,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;AAC7F;AAEA,MAAMC,eAAqD,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC3E,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,MAAM,GAAG,IAAID,IAAI,CAACF,KAAK,CAACI,UAAU,CAAC;EACzC,MAAMC,MAAM,GAAGX,aAAa,CAACO,GAAG,EAAEE,MAAM,CAAC;EAEzC,IAAIG,OAAO,GAAGN,KAAK,CAACO,cAAc;EAClC,MAAMC,eAAe,GAAGR,KAAK,CAACS,YAAY,GAAG,GAAG,GAAG,EAAE;EACrD,MAAMC,eAAe,GACnBV,KAAK,CAACW,QAAQ,CAACC,IAAI,GACnBZ,KAAK,CAACW,QAAQ,CAACE,MAAM,GACrBb,KAAK,CAACW,QAAQ,CAACG,IAAI,GACnBd,KAAK,CAACW,QAAQ,CAACI,MAAM,GACrBf,KAAK,CAACW,QAAQ,CAACK,SAAS;EAE1B,MAAMC,MAAgB,GAAG,EAAE;EAC3B,MAAMC,IAAc,GAAG,EAAE;EAEzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAId,MAAM,EAAEc,CAAC,EAAE,EAAE;IAChC,MAAMC,IAAI,GAAG,IAAIlB,IAAI,CAACD,GAAG,CAACJ,WAAW,CAAC,CAAC,EAAEI,GAAG,CAACH,QAAQ,CAAC,CAAC,GAAGqB,CAAC,EAAE,CAAC,CAAC;IAC/DF,MAAM,CAACI,IAAI,CAACD,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAC,CAAC;IAClFN,IAAI,CAACG,IAAI,CAACI,MAAM,CAACnB,OAAO,CAACoB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACrCpB,OAAO,GAAG,CAACA,OAAO,GAAGN,KAAK,CAAC2B,aAAa,GAAGjB,eAAe,KAAK,CAAC,GAAGF,eAAe,CAAC;EACrF;EAEA,oBACEf,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCvC,OAAA,CAACF,IAAI;MACH2B,IAAI,EAAE;QACJD,MAAM;QACNgB,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,mBAAmB;UAC1BhB,IAAI;UACJiB,WAAW,EAAE,SAAS;UACtBC,eAAe,EAAE,sBAAsB;UACvCC,IAAI,EAAE;QACR,CAAC;MAEL,CAAE;MACFC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,MAAM,EAAE;UACNC,CAAC,EAAE;YAAEC,WAAW,EAAE;UAAK;QACzB;MACF;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACW,EAAA,GAjDI5C,eAAqD;AAmD3D,eAAeA,eAAe;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}