{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jurev\\\\Desktop\\\\SAVINGS 2025\\\\finance-tracker\\\\src\\\\components\\\\PredictionChart.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction monthsBetween(start, end) {\n  return (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth());\n}\nfunction findIndexForDate(labels, targetDate) {\n  const targetStr = targetDate.toLocaleDateString('en-GB', {\n    year: 'numeric',\n    month: 'short'\n  });\n  return labels.findIndex(label => label === targetStr);\n}\nconst PredictionChart = ({\n  input\n}) => {\n  const now = new Date();\n  const target = new Date(input.targetDate);\n  const months = monthsBetween(now, target);\n  let savings = input.currentSavings;\n  const monthlyInterest = input.interestRate / 100 / 12;\n  const monthlySpending = input.spending.food + input.spending.drinks + input.spending.misc + input.spending.social + input.spending.apartment;\n  const labels = [];\n  const data = [];\n  for (let i = 0; i <= months; i++) {\n    const date = new Date(now.getFullYear(), now.getMonth() + i, 1);\n    labels.push(date.toLocaleDateString('en-GB', {\n      year: 'numeric',\n      month: 'short'\n    }));\n    data.push(Number(savings.toFixed(2)));\n    savings = (savings + input.monthlySalary - monthlySpending) * (1 + monthlyInterest);\n  }\n\n  // Find savings for Jan 1st next year and in 5 years\n  const jan1 = new Date(now.getFullYear() + 1, 0, 1);\n  const fiveYears = new Date(now.getFullYear() + 5, now.getMonth(), 1);\n  const jan1Idx = findIndexForDate(labels, jan1);\n  const fiveYearsIdx = findIndexForDate(labels, fiveYears);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Predicted Net Valuation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Predicted Savings on Target Date: \", data[data.length - 1].toFixed(2), \" EUR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Predicted Savings on Jan 1st next year: \", jan1Idx !== -1 ? data[jan1Idx].toFixed(2) : 'N/A', \" EUR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Predicted Savings in 5 years: \", fiveYearsIdx !== -1 ? data[fiveYearsIdx].toFixed(2) : 'N/A', \" EUR\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels,\n        datasets: [{\n          label: 'Predicted Savings',\n          data,\n          borderColor: '#36a2eb',\n          backgroundColor: 'rgba(54,162,235,0.2)',\n          fill: true\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = PredictionChart;\nexport default PredictionChart;\nvar _c;\n$RefreshReg$(_c, \"PredictionChart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","monthsBetween","start","end","getFullYear","getMonth","findIndexForDate","labels","targetDate","targetStr","toLocaleDateString","year","month","findIndex","label","PredictionChart","input","now","Date","target","months","savings","currentSavings","monthlyInterest","interestRate","monthlySpending","spending","food","drinks","misc","social","apartment","data","i","date","push","Number","toFixed","monthlySalary","jan1","fiveYears","jan1Idx","fiveYearsIdx","children","fileName","_jsxFileName","lineNumber","columnNumber","length","datasets","borderColor","backgroundColor","fill","options","responsive","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/jurev/Desktop/SAVINGS 2025/finance-tracker/src/components/PredictionChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { PredictionInput } from './PredictionForm';\r\n\r\nfunction monthsBetween(start: Date, end: Date) {\r\n  return (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth());\r\n}\r\n\r\nfunction findIndexForDate(labels: string[], targetDate: Date) {\r\n  const targetStr = targetDate.toLocaleDateString('en-GB', { year: 'numeric', month: 'short' });\r\n  return labels.findIndex(label => label === targetStr);\r\n}\r\n\r\nconst PredictionChart: React.FC<{ input: PredictionInput }> = ({ input }) => {\r\n  const now = new Date();\r\n  const target = new Date(input.targetDate);\r\n  const months = monthsBetween(now, target);\r\n\r\n  let savings = input.currentSavings;\r\n  const monthlyInterest = input.interestRate / 100 / 12;\r\n  const monthlySpending =\r\n    input.spending.food +\r\n    input.spending.drinks +\r\n    input.spending.misc +\r\n    input.spending.social +\r\n    input.spending.apartment;\r\n\r\n  const labels: string[] = [];\r\n  const data: number[] = [];\r\n\r\n  for (let i = 0; i <= months; i++) {\r\n    const date = new Date(now.getFullYear(), now.getMonth() + i, 1);\r\n    labels.push(date.toLocaleDateString('en-GB', { year: 'numeric', month: 'short' }));\r\n    data.push(Number(savings.toFixed(2)));\r\n    savings = (savings + input.monthlySalary - monthlySpending) * (1 + monthlyInterest);\r\n  }\r\n\r\n  // Find savings for Jan 1st next year and in 5 years\r\n  const jan1 = new Date(now.getFullYear() + 1, 0, 1);\r\n  const fiveYears = new Date(now.getFullYear() + 5, now.getMonth(), 1);\r\n\r\n  const jan1Idx = findIndexForDate(labels, jan1);\r\n  const fiveYearsIdx = findIndexForDate(labels, fiveYears);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Predicted Net Valuation</h2>\r\n      <div>\r\n        <strong>Predicted Savings on Target Date: {data[data.length - 1].toFixed(2)} EUR</strong>\r\n      </div>\r\n      <div>\r\n        <strong>\r\n          Predicted Savings on Jan 1st next year: {jan1Idx !== -1 ? data[jan1Idx].toFixed(2) : 'N/A'} EUR\r\n        </strong>\r\n      </div>\r\n      <div>\r\n        <strong>\r\n          Predicted Savings in 5 years: {fiveYearsIdx !== -1 ? data[fiveYearsIdx].toFixed(2) : 'N/A'} EUR\r\n        </strong>\r\n      </div>\r\n      <Line\r\n        data={{\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: 'Predicted Savings',\r\n              data,\r\n              borderColor: '#36a2eb',\r\n              backgroundColor: 'rgba(54,162,235,0.2)',\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          responsive: true,\r\n          scales: {\r\n            y: { beginAtZero: true },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}