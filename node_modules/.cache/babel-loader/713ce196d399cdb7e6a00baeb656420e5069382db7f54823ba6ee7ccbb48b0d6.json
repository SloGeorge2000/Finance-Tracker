{"ast":null,"code":"import React from'react';import{Line}from'react-chartjs-2';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function monthsBetween(start,end){return(end.getFullYear()-start.getFullYear())*12+(end.getMonth()-start.getMonth());}function findIndexForDate(labels,targetDate){const targetStr=targetDate.toLocaleDateString('en-GB',{year:'numeric',month:'short'});return labels.findIndex(label=>label===targetStr);}const PredictionChart=_ref=>{let{input}=_ref;const now=new Date();const target=new Date(input.targetDate);const fiveYears=new Date(now.getFullYear()+5,now.getMonth(),1);const jan1=new Date(now.getFullYear()+1,0,1);// Calculate up to the later of target date or 5 years from now for data, but graph only up to target\nconst endDate=target>fiveYears?target:fiveYears;const months=monthsBetween(now,endDate);const monthsToTarget=monthsBetween(now,target);let etoro=input.currentSavingsEtoro||0;let bank=input.currentSavingsBank||0;const monthlyEtoroInterest=(input.etoroInterest||0)/100/12;const monthlySpending=input.spending.apartment+input.spending.apartmentCosts+input.spending.foodAndDrinks+input.spending.travel+input.spending.accessories+input.spending.socialLife+input.spending.wifi+input.spending.misc;const labels=[];const data=[];let salary=input.monthlySalary||0;let salaryGrowth=Math.max((typeof input.salaryGrowth==='number'?input.salaryGrowth:4)/100,-0.99);// Clamp to -99%\nlet inflation=(typeof input.inflation==='number'?input.inflation:2)/100;// default 2%\nlet monthlyEtoroContribution=typeof input.monthlyEtoroContribution==='number'?input.monthlyEtoroContribution:100;let monthlyInflation=Math.pow(1+inflation,1/12)-1;let monthlySalaryGrowth=Math.pow(1+salaryGrowth,1/12)-1;for(let i=0;i<=months;i++){const date=new Date(now.getFullYear(),now.getMonth()+i,1);labels.push(date.toLocaleDateString('en-GB',{year:'numeric',month:'short'}));data.push(Number((bank+etoro).toFixed(2)));// Add user-defined EUR from salary to etoro each month\nif(salary>=monthlyEtoroContribution){etoro+=monthlyEtoroContribution;bank=bank+salary-monthlyEtoroContribution-monthlySpending*Math.pow(1+monthlyInflation,i);}else{bank=bank+salary-monthlySpending*Math.pow(1+monthlyInflation,i);}// Apply E-toro interest, adjusted for inflation\netoro=etoro*(1+monthlyEtoroInterest-monthlyInflation);// Increase salary for next month\nsalary=salary*(1+monthlySalaryGrowth-monthlyInflation);}// For numbers, continue simulation up to 5 years if needed\nlet bank5=input.currentSavingsBank||0;let etoro5=input.currentSavingsEtoro||0;let salary5=input.monthlySalary||0;let savingsAtJan1=null;let savingsAt5Years=null;for(let i=0;i<=months;i++){const date=new Date(now.getFullYear(),now.getMonth()+i,1);if(date.getFullYear()===jan1.getFullYear()&&date.getMonth()===jan1.getMonth()){savingsAtJan1=bank5+etoro5;}if(date.getFullYear()===fiveYears.getFullYear()&&date.getMonth()===fiveYears.getMonth()){savingsAt5Years=bank5+etoro5;}// Use user-defined values for growth, inflation, and etoro contribution\nlet salaryGrowth5=(typeof input.salaryGrowth==='number'?input.salaryGrowth:4)/100;let inflation5=(typeof input.inflation==='number'?input.inflation:2)/100;let monthlyEtoroContribution5=typeof input.monthlyEtoroContribution==='number'?input.monthlyEtoroContribution:100;let monthlyInflation5=Math.pow(1+inflation5,1/12)-1;let monthlySalaryGrowth5=Math.pow(1+salaryGrowth5,1/12)-1;if(salary5>=monthlyEtoroContribution5){etoro5+=monthlyEtoroContribution5;bank5=bank5+salary5-monthlyEtoroContribution5-monthlySpending;}else{bank5=bank5+salary5-monthlySpending;}etoro5=etoro5*(1+monthlyEtoroInterest-monthlyInflation5);salary5=salary5*(1+monthlySalaryGrowth5-monthlyInflation5);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"predicted-net-valuation\",children:\"Predicted Net Valuation\"}),/*#__PURE__*/_jsx(\"div\",{className:\"predicted-net-valuation\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"Predicted Savings on Target Date: \",data[monthsToTarget].toFixed(2),\" EUR\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"predicted-net-valuation\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"Predicted Savings on Jan 1st next year: \",savingsAtJan1!==null?savingsAtJan1.toFixed(2):'N/A',\" EUR\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"predicted-net-valuation\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"Predicted Savings in 5 years: \",savingsAt5Years!==null?savingsAt5Years.toFixed(2):'N/A',\" EUR\"]})}),/*#__PURE__*/_jsx(Line,{data:{labels,datasets:[{label:'Predicted Savings',data,borderColor:'#FFB6C1',backgroundColor:'rgba(255,182,193,0.2)',fill:true,pointBackgroundColor:'#FFB6C1',pointBorderColor:'#FFB6C1',borderWidth:window.innerWidth<600?2:4,// thinner line on mobile\npointRadius:window.innerWidth<600?2:4// smaller points on mobile\n}]},options:{responsive:true,maintainAspectRatio:false,plugins:{legend:{display:true,labels:{font:{family:'Roboto'}}},title:{display:true,text:'Predicted Net Valuation Over Time',font:{size:18,family:'Roboto'}}},scales:{x:{title:{display:true,text:'Date',font:{family:'Roboto'}}},y:{beginAtZero:true,title:{display:true,text:'Savings (EUR)',font:{family:'Roboto'}}}}},height:window.innerWidth<600?220:undefined})]});};export default PredictionChart;","map":{"version":3,"names":["React","Line","jsx","_jsx","jsxs","_jsxs","monthsBetween","start","end","getFullYear","getMonth","findIndexForDate","labels","targetDate","targetStr","toLocaleDateString","year","month","findIndex","label","PredictionChart","_ref","input","now","Date","target","fiveYears","jan1","endDate","months","monthsToTarget","etoro","currentSavingsEtoro","bank","currentSavingsBank","monthlyEtoroInterest","etoroInterest","monthlySpending","spending","apartment","apartmentCosts","foodAndDrinks","travel","accessories","socialLife","wifi","misc","data","salary","monthlySalary","salaryGrowth","Math","max","inflation","monthlyEtoroContribution","monthlyInflation","pow","monthlySalaryGrowth","i","date","push","Number","toFixed","bank5","etoro5","salary5","savingsAtJan1","savingsAt5Years","salaryGrowth5","inflation5","monthlyEtoroContribution5","monthlyInflation5","monthlySalaryGrowth5","children","className","datasets","borderColor","backgroundColor","fill","pointBackgroundColor","pointBorderColor","borderWidth","window","innerWidth","pointRadius","options","responsive","maintainAspectRatio","plugins","legend","display","font","family","title","text","size","scales","x","y","beginAtZero","height","undefined"],"sources":["C:/Users/jurev/Desktop/SAVINGS 2025/finance-tracker/src/components/PredictionChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { PredictionInput } from './PredictionForm';\r\n\r\nfunction monthsBetween(start: Date, end: Date) {\r\n  return (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth());\r\n}\r\n\r\nfunction findIndexForDate(labels: string[], targetDate: Date) {\r\n  const targetStr = targetDate.toLocaleDateString('en-GB', { year: 'numeric', month: 'short' });\r\n  return labels.findIndex(label => label === targetStr);\r\n}\r\n\r\nconst PredictionChart: React.FC<{ input: PredictionInput }> = ({ input }) => {\r\n  const now = new Date();\r\n  const target = new Date(input.targetDate);\r\n  const fiveYears = new Date(now.getFullYear() + 5, now.getMonth(), 1);\r\n  const jan1 = new Date(now.getFullYear() + 1, 0, 1);\r\n\r\n  // Calculate up to the later of target date or 5 years from now for data, but graph only up to target\r\n  const endDate = target > fiveYears ? target : fiveYears;\r\n  const months = monthsBetween(now, endDate);\r\n  const monthsToTarget = monthsBetween(now, target);\r\n\r\n  let etoro = input.currentSavingsEtoro || 0;\r\n  let bank = input.currentSavingsBank || 0;\r\n  const monthlyEtoroInterest = (input.etoroInterest || 0) / 100 / 12;\r\n  const monthlySpending =\r\n    input.spending.apartment +\r\n    input.spending.apartmentCosts +\r\n    input.spending.foodAndDrinks +\r\n    input.spending.travel +\r\n    input.spending.accessories +\r\n    input.spending.socialLife +\r\n    input.spending.wifi +\r\n    input.spending.misc;\r\n\r\n  const labels: string[] = [];\r\n  const data: number[] = [];\r\n\r\n  let salary = input.monthlySalary || 0;\r\n  let salaryGrowth = Math.max((typeof input.salaryGrowth === 'number' ? input.salaryGrowth : 4) / 100, -0.99); // Clamp to -99%\r\n  let inflation = (typeof input.inflation === 'number' ? input.inflation : 2) / 100; // default 2%\r\n  let monthlyEtoroContribution = typeof input.monthlyEtoroContribution === 'number' ? input.monthlyEtoroContribution : 100;\r\n  let monthlyInflation = Math.pow(1 + inflation, 1 / 12) - 1;\r\n  let monthlySalaryGrowth = Math.pow(1 + salaryGrowth, 1 / 12) - 1;\r\n\r\n  for (let i = 0; i <= months; i++) {\r\n    const date = new Date(now.getFullYear(), now.getMonth() + i, 1);\r\n    labels.push(date.toLocaleDateString('en-GB', { year: 'numeric', month: 'short' }));\r\n    data.push(Number((bank + etoro).toFixed(2)));\r\n    // Add user-defined EUR from salary to etoro each month\r\n    if (salary >= monthlyEtoroContribution) {\r\n      etoro += monthlyEtoroContribution;\r\n      bank = bank + salary - monthlyEtoroContribution - (monthlySpending * Math.pow(1 + monthlyInflation, i));\r\n    } else {\r\n      bank = bank + salary - (monthlySpending * Math.pow(1 + monthlyInflation, i));\r\n    }\r\n    // Apply E-toro interest, adjusted for inflation\r\n    etoro = etoro * (1 + monthlyEtoroInterest - monthlyInflation);\r\n    // Increase salary for next month\r\n    salary = salary * (1 + monthlySalaryGrowth - monthlyInflation);\r\n  }\r\n\r\n  // For numbers, continue simulation up to 5 years if needed\r\n  let bank5 = input.currentSavingsBank || 0;\r\n  let etoro5 = input.currentSavingsEtoro || 0;\r\n  let salary5 = input.monthlySalary || 0;\r\n  let savingsAtJan1 = null;\r\n  let savingsAt5Years = null;\r\n  for (let i = 0; i <= months; i++) {\r\n    const date = new Date(now.getFullYear(), now.getMonth() + i, 1);\r\n    if (date.getFullYear() === jan1.getFullYear() && date.getMonth() === jan1.getMonth()) {\r\n      savingsAtJan1 = bank5 + etoro5;\r\n    }\r\n    if (date.getFullYear() === fiveYears.getFullYear() && date.getMonth() === fiveYears.getMonth()) {\r\n      savingsAt5Years = bank5 + etoro5;\r\n    }\r\n    // Use user-defined values for growth, inflation, and etoro contribution\r\n    let salaryGrowth5 = (typeof input.salaryGrowth === 'number' ? input.salaryGrowth : 4) / 100;\r\n    let inflation5 = (typeof input.inflation === 'number' ? input.inflation : 2) / 100;\r\n    let monthlyEtoroContribution5 = typeof input.monthlyEtoroContribution === 'number' ? input.monthlyEtoroContribution : 100;\r\n    let monthlyInflation5 = Math.pow(1 + inflation5, 1 / 12) - 1;\r\n    let monthlySalaryGrowth5 = Math.pow(1 + salaryGrowth5, 1 / 12) - 1;\r\n    if (salary5 >= monthlyEtoroContribution5) {\r\n      etoro5 += monthlyEtoroContribution5;\r\n      bank5 = bank5 + salary5 - monthlyEtoroContribution5 - monthlySpending;\r\n    } else {\r\n      bank5 = bank5 + salary5 - monthlySpending;\r\n    }\r\n    etoro5 = etoro5 * (1 + monthlyEtoroInterest - monthlyInflation5);\r\n    salary5 = salary5 * (1 + monthlySalaryGrowth5 - monthlyInflation5);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"predicted-net-valuation\">Predicted Net Valuation</h2>\r\n      <div className=\"predicted-net-valuation\">\r\n        <strong>Predicted Savings on Target Date: {data[monthsToTarget].toFixed(2)} EUR</strong>\r\n      </div>\r\n      <div className=\"predicted-net-valuation\">\r\n        <strong>\r\n          Predicted Savings on Jan 1st next year: {savingsAtJan1 !== null ? savingsAtJan1.toFixed(2) : 'N/A'} EUR\r\n        </strong>\r\n      </div>\r\n      <div className=\"predicted-net-valuation\">\r\n        <strong>\r\n          Predicted Savings in 5 years: {savingsAt5Years !== null ? savingsAt5Years.toFixed(2) : 'N/A'} EUR\r\n        </strong>\r\n      </div>\r\n      <Line\r\n        data={{\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: 'Predicted Savings',\r\n              data,\r\n              borderColor: '#FFB6C1',\r\n              backgroundColor: 'rgba(255,182,193,0.2)',\r\n              fill: true,\r\n              pointBackgroundColor: '#FFB6C1',\r\n              pointBorderColor: '#FFB6C1',\r\n              borderWidth: window.innerWidth < 600 ? 2 : 4, // thinner line on mobile\r\n              pointRadius: window.innerWidth < 600 ? 2 : 4, // smaller points on mobile\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            legend: { display: true, labels: { font: { family: 'Roboto' } } },\r\n            title: {\r\n              display: true,\r\n              text: 'Predicted Net Valuation Over Time',\r\n              font: { size: 18, family: 'Roboto' },\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              title: { display: true, text: 'Date', font: { family: 'Roboto' } },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n              title: { display: true, text: 'Savings (EUR)', font: { family: 'Roboto' } },\r\n            },\r\n          },\r\n        }}\r\n        height={window.innerWidth < 600 ? 220 : undefined}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}